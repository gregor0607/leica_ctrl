datatosave <- fileapply(dir)
library(dataframes2xls)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."), sep=".")
write.xls(datatosave, file=paste(fname, "xlsx", sep="."), col.names = TRUE, row.names = TRUE)
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(dir){
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)}
datatosave <- fileapply(dir)
library(dataframes2xls)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xls(datatosave, file=paste(fname, "xls", sep="."), col.names = TRUE, row.names = TRUE)
}
saveflim("abcproba", "./Leica/2015_10_28")
library(xlsx)
?write.xlsx
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(dir){
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)}
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
bla <- readRDS("abcproba.rds")
bla
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(dir){
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)}
return(datamerged)
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(dir){
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
return(datamerged)}
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
bla <- readRDS("abcproba.rds")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(dir){
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
datamerged
}
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#function to open files and apply extract function
fileapply <- function(directory){
files_list <- list.files(directory, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(directory, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
return(datamerged)
}
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
library(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
print(datamerged)}
saveflim(dir="./Leica/2015_10_28")
rm(list=ls())
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))
}
#function to open files and apply extract function
fileapply <- function(directory){
files_list <- list.files(directory, pattern="\\.dat")  #vector of all dat files in dir
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(directory, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
return(datamerged)
}
saveflim <- function(fname, dir){
datatosave <- fileapply(dir)
library(xlsx)
saveRDS(datatosave, file=paste(fname, "rds", sep="."))
write.csv(datatosave, file=paste(fname, "csv", sep="."))
write.xlsx(datatosave, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
dat <- fileapply("./Leica/2015_10_28")
fileapply <- function(directory){
files_list <- list.files(directory, pattern="\\.dat")  #vector of all dat files in dir
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(directory, x, sep='/')))
}
dat <- fileapply("./Leica/2015_10_28")
dat
dat1 <- do.call(rbind.data.frame, dat)
dat1
dat1 <- do.call(rbind.data.frame, dat)
fileapply <- function(directory){
files_list <- list.files(directory, pattern="\\.dat")  #vector of all dat files in dir
index <- seq_along(files_list)
data <- lapply(files_list[index], function(x) extract(paste(directory, x, sep='/')))
}
dat <- fileapply("./Leica/2015_10_28")
dat1 <- do.call(rbind.data.frame, dat)
dat1
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- lapply(files_list[index], function(x) extract(paste(dir, x, sep='/')))
datamerged <- do.call(rbind.data.frame, data)
library(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
?lapply
fileapply <- function(directory){
files_list <- list.files(directory, pattern="\\.dat")  #vector of all dat files in dir
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(directory, x, sep='/')))
}
dat <- fileapply("./Leica/2015_10_28")
fix(fileapply)
dat <- fileapply("./Leica/2015_10_28")
dat
datamerged <- do.call(rbind.data.frame, dat)
datamerged
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')),
simplify = FALSE) #lapply - no row names (more clean)
datamerged <- do.call(rbind.data.frame, data)
library(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
saveflim("abcproba", "./Leica/2015_10_28")
saveflim("abcproba", "./Leica/2015_10_28")
rm(list=ls())
data <- readRDS("abcproby")
data <- readRDS("abcproby.rds")
data <- readRDS("abcproba.rds")
View(data)
mean(data$tau_amp)
sd(data$tau_amp)
median(data$tau_amp)
?require
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#opening files and applying extract function
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')),
simplify = FALSE) #lapply - no row names (more clean)
datamerged <- do.call(rbind.data.frame, data)
if(!("xlsx" %in% installed.packages())) {install.packages("xlsx")}
else require(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
saveflim("flim", "./Leica/2015_10_28")
readRDS("flim.rds")
data <- readRDS("flim.rds")
boxplot(data$tau_amp
)
min(data[,5])
max(data[,5])
range(data[,5])
library(XLConnect)
vignette("XLConnect")
data <- readWorksheetFromFile("test.xlsx", sheet=1)
View(data)
class(data)
typeof(data)
data
data[14,]
names(data)
names(data) <- c("date", "measurment", "none", "amp_1", "tau_1", "amp_2", "tau_2", "chi2", "tau_amp")
head(data)
data = data[-1, ]
head(data)
edit(data)
is.na(data[,9])
data1 <- data[!(is.na(data[,9])),]
View(data1)
View(data1[,-1])
data1 <- data1[,-c(1,2,3)]
data1
data1 <- data1[,-c(4)]
data1
data1
data1
data1 <- data[!(is.na(data[,9])),]
data1
View(data1)
data1 <- data1[,-c(1,2,3,8)]
View(data1)
id <- c(1:100)
wektor <- paste("alfa_s_Citrine_donor", id, sep="_")
wektor[1:5]
cbind(wektor, data1)
wektor <- wektor[-c(91:100)]
cbind(wektor, data1)
data2 <- cbind(wektor, data1)
id <- c(1:90)
wektor <- paste("alfa_s_Cit_donor", id, sep="_")
data2 <- cbind(wektor, data1)
View(data2)
saveRDS("alfa-S_Cit_donor.rds")
saveRDS(data2, "alfa-S_Cit_donor.rds")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#opening files and applying extract function
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')),
simplify = FALSE) #lapply - no row names (more clean)
datamerged <- do.call(rbind.data.frame, data)
if(!("xlsx" %in% installed.packages())) {install.packages("xlsx")}
else require(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
saveflim(asia, "./Leica/2015_10-28")
saveflim("asia", "./Leica/2015_10-28")
saveflim("asia", "./Leica/2015_10_28")
asiula <- readRDS("asia.rds")
View(asiula)
asiula <- asiula[2, 42] == "dupa"
library(XLConnect)
d1 <- readWorksheetFromFile("./Leica/alpha_s_Citrine")
d1 <- readWorksheetFromFile("./Leica/alpha_s_Citrine.xlsx")
vignette("XLConnect")
d1 <- readWorksheetFromFile("./Leica/alpha_s_Citrine.xlsx")
setwd("./Leica")
saveflim <- function(fname, dir){
#function to extract information from a file
extract <- function(filename){
amplif <- scan(filename, skip=1, nlines=4, what="numeric")
time <- scan(filename, skip=10, nline=1, what="numeric")
data <- data.frame(amp_1 = as.numeric(amplif[3]),
lft_1 = as.numeric(amplif[6]),
amp_2 = as.numeric(amplif[9]),
lft_2 = as.numeric(amplif[12]),
tau_amp = as.numeric(time[2]))}
#opening files and applying extract function
files_list <- list.files(dir, pattern="\\.dat")
index <- seq_along(files_list)
data <- sapply(files_list[index], function(x) extract(paste(dir, x, sep='/')),
simplify = FALSE) #lapply - no row names (more clean)
datamerged <- do.call(rbind.data.frame, data)
if(!("xlsx" %in% installed.packages())) {install.packages("xlsx")}
else require(xlsx)
saveRDS(datamerged, file=paste(fname, "rds", sep="."))
write.csv(datamerged, file=paste(fname, "csv", sep="."))
write.xlsx(datamerged, file=paste(fname, "xlsx", sep="."))
}
#function to delete outliers
outoutliers <- function (df, x=6){
if(!("outliers" %in% installed.packages())) {install.packages("outliers")}
else require(outliers)
if(!("dplyr" %in% installed.packages())) {install.packages("dplyr")}
else require(dplyr)
outliers <- scores(df[,x], type="z", prob=.95)
newdf <- dplyr::filter(df, !outliers)
message(cat("The outliers are (with 95% confidence):\n", df[outliers, x], "\n",
rep("-", 20)), "\n",
"The mean and median with outliers are respectively: ",
round(mean(df[,x]), 2), " ; ", median(df[,x]), "\n",
"The mean and median without outliers are respectively: ",
round(mean(newdf[,x]), 2), " ; " ,median(newdf[,x]))
return(newdf)
}
savaflim("alfa_S_mCitrine_beta3_mCherry_gamma2", "./daneftp/2015_10_28")
saveflim("alfa_S_mCitrine_beta3_mCherry_gamma2", "./daneftp/2015_10_28")
setwd("./leica_ctrl/data")
list.files()
beta <- readRDS(list.files()[1])
betaout <- outoutliers(beta)
beta
betaout <- outoutliers(beta, 5)
outoutliers <- function (df, x=6, p=.95){
if(!("outliers" %in% installed.packages())) {install.packages("outliers")}
else require(outliers)
if(!("dplyr" %in% installed.packages())) {install.packages("dplyr")}
else require(dplyr)
outliers <- scores(df[,x], type="z", prob=p)
newdf <- dplyr::filter(df, !outliers)
message(cat("The outliers are (with ", p*100 ," % confidence):\n", df[outliers, x], "\n",
rep("-", 20)), "\n",
"The mean and median with outliers are respectively: ",
round(mean(df[,x]), 2), " ; ", median(df[,x]), "\n",
"The mean and median without outliers are respectively: ",
round(mean(newdf[,x]), 2), " ; " ,median(newdf[,x]))
return(newdf)
}
betaout <- outoutliers(beta, 5)
betaout <- outoutliers(beta, 5, .99)
outoutliers <- function (df, x=6, p=.95){
if(!("outliers" %in% installed.packages())) {install.packages("outliers")}
else require(outliers)
if(!("dplyr" %in% installed.packages())) {install.packages("dplyr")}
else require(dplyr)
outliers <- scores(df[,x], type="z", prob=p)
newdf <- dplyr::filter(df, !outliers)
message(cat("The outliers are (with", p*100 ,"% confidence):\n", df[outliers, x], "\n",
rep("-", 20)), "\n",
"The mean and median with outliers are respectively: ",
round(mean(df[,x]), 2), " ; ", median(df[,x]), "\n",
"The mean and median without outliers are respectively: ",
round(mean(newdf[,x]), 2), " ; " ,median(newdf[,x]))
return(newdf)
}
betaout <- outoutliers(beta, 5, .99)
betaout <- outoutliers(beta, 5, .95)
betaout <- outoutliers(beta, 5, .9)
betaout <- outoutliers(beta, 5, .8)
betaout <- outoutliers(beta, 5, .6)
betaout <- outoutliers(beta, 5, .5)
betaout <- outoutliers(beta, 5, 1)
betaout <- outoutliers(beta, 5, .95)
2.98/3.04
2.9/3.04
outoutliers <- function (df, x=6, p=.95){
if(!("outliers" %in% installed.packages())) {install.packages("outliers")}
else require(outliers)
if(!("dplyr" %in% installed.packages())) {install.packages("dplyr")}
else require(dplyr)
outliers <- scores(df[,x], type="z", prob=p)
newdf <- dplyr::filter(df, !outliers)
message(cat("The outliers for", p*100 ,"% confidence interval are):\n",
df[outliers, x], "\n",
rep("-", 20)), "\n",
"The mean and median with outliers are respectively: ",
round(mean(df[,x]), 2), " ; ", median(df[,x]), "\n",
"The mean and median without outliers are respectively: ",
round(mean(newdf[,x]), 2), " ; " ,median(newdf[,x]))
return(newdf)
}
betaout <- outoutliers(beta, 5, .95)
